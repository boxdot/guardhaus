platform:
  - x86
  - x64
environment:
  OPENSSL_INCLUDE_DIR: C:\OpenSSL\include
  OPENSSL_LIB_DIR: C:\OpenSSL\lib
  OPENSSL_LIBS: ssleay32:libeay32
  matrix:
    - RUST_VERSION: stable
      TARGET: msvc
    - RUST_VERSION: stable
      TARGET: gnu
    - RUST_VERSION: beta
      TARGET: msvc
    - RUST_VERSION: beta
      TARGET: gnu
    - RUST_VERSION: nightly
      TARGET: msvc
    - RUST_VERSION: nightly
      TARGET: gnu
matrix:
  allow_failures:
    - TARGET: msvc
      platform: x86
    - RUST_VERSION: nightly
cache:
  - target\debug\build
  - target\debug\deps
  - '%USERPROFILE%\.cargo'
install:
  - ps: |
        $env:PATH = "$env:PATH;C:\rust\bin";
        if ($env:RUST_VERSION -eq 'stable') {
          $env:RUST_VERSION = "1.5.0";
        }
        if ($env:platform -eq 'x86') {
          $env:arch_expanded = "i686-pc-windows-${env:TARGET}";
          $env:ARCH = "x86";
          $env:bits = "32";
        } else {
          $env:arch_expanded = "x86_64-pc-windows-${env:TARGET}";
          $env:ARCH = "amd64";
          $env:bits ="64";
        }
        if ($env:TARGET -eq 'gnu') {
          $env:PATH = "$env:PATH;C:\msys64\mingw${env:bits}\bin";
          gcc --version;
        }
  - curl --show-error --location --retry 5 --output openssl-installer.exe https://slproweb.com/download/Win%bits%OpenSSL-1_0_2e.exe
  - .\openssl-installer.exe /SILENT /VERYSILENT /SP- /DIR="C:\OpenSSL"
  - curl --show-error --location --retry 5 --output rust-installer.exe https://static.rust-lang.org/dist/rust-%RUST_VERSION%-%arch_expanded%.exe
  - .\rust-installer.exe /VERYSILENT /NORESTART /DIR="C:\rust"
  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - rustc -vV
  - cargo -vV
build: false
test_script:
  - cargo test --verbose
